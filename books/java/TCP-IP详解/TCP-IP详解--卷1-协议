《TCP/IP详解 卷1：协议》	--start 2019-8-20 16:43:51 

英文名 《TCP/IP Illustrated Volume 1: The protocals》
阅读地址 http://www.52im.net/topic-tcpipvol1.html

第1章 概述

	1.1 引言

	1.2 分层

		1. 链路层：
			有时也称作数据链路层或网络接口层，通常包括操作系统中的设备驱动程序和计算机中对应的网络接口卡。它们一起处理与电缆（或其他任何传输媒介）的物理接口细节。

		2. 网络层：
			有时也称作互联网层，处理分组在网络中的活动，例如分组的选路。在TCP/IP协议族中，网络层协议包括IP协议（网际协议），ICMP协议（Internet互联网控制报文协议），以及IGMP协议（Internet组管理协议）。

		3. 传输层：
			主要为两台主机上的应用程序提供端到端的通信。在TCP/IP协议族中，有两个互不相同的传输协议：TCP（传输控制协议）和UDP（用户数据报协议）。

			TCP为两台主机提供高可靠性的数据通信。它所做的工作包括把应用程序交给它的数据分成合适的小块交给下面的网络层，确认接收到的分组，设置发送最后确认分组的超时时钟等。由于运输层提供了高可靠性的端到端的通信，因此应用层可以忽略所有这些细节。

			UDP则为应用层提供一种非常简单的服务。它只是把称作数据报的分组从一台主机发送到另一台主机，但并不保证该数据报能到达另一端。任何必需的可靠性必须由应用层来提供。

		4. 应用层
			负责处理特定的应用程序细节。几乎各种不同的TCP/IP实现都会提供下面这些通用的应用程序：
				• Telnet远程登录。
				• FTP文件传输协议。
				• SMTP简单邮件传送协议。
				• SNMP简单网络管理协议。

	1.3 TCP/IP的分层

	1.4 互联网的地址

		5类IP地址：

			类别                        格式                                                   范围								最大数量

			A类： 0|  网络号(7位)  |          主机号(24位)           |                    0.0.0.0 - 127.255.255.255                2^7-2(-2因为全0或全1ID非法)
			B类： 1|0|     网络号(14位)      |       主机号(16位)    |                  128.0.0.0 - 191.255.255.255                2^14-2
			C类： 1|1|0|         网络号(21位)    |    主机号(8位)    |                  192.0.0.0 - 223.255.255.255                2^21-2
			D类： 1|1|1|0|          多播组号(28位)                   |                 224.0.0.0 - 239.255.255.255
			E类： 1|1|1|1|0|        留待后用(27位)                   |                 240.0.0.0 - 247.255.255.255

		点分十进制表示法(Dotted decimal notation): 32位的IP地址通常写成4个十进制的数，每个整数对应一个字节，例如：192.168.99.1 

	1.5 域名系统
	
		DNS: 是一个分布的数据库，由它来提供IP地址和主机名之间的映射信息

	1.6 封装

		当应用程序用TCP传送数据时，数据被送入协议栈中，然后逐个通过每一层直到被当作一串比特流送入网络。
		其中每一层对收到的数据都要增加一些首部信息（有时还要增加尾部信息），比如：
			TCP传给IP的数据单元称作TCP报文段或简称为TCP段（TCP segment）。
			IP传给网络接口层的数据单元称作IP数据报(IP datagram)。通过以太网传输的比特流称作帧(Frame)。

	1.7 分用
	
		当目的主机收到一个以太网数据帧时，数据就开始从协议栈中由底向上升，同时去掉各层协议加上的报文首部。每层协议盒都要去检查报文首部中的协议标识，以确定接收数据的上层协议。

	1.8 服务器模型
	
		重复型：
			I1: 等待一个客户请求的到来
			I2: 处理客户请求
			I3: 发送响应给发送请求的客户
			I4: 返回I1步
		并发型：			
			C1: 等待一个客户请求的到来
			C2: 启动一个新的服务器来处理这个客户的请求。在这期间可能生成一个新的进程、任务或线程，并依赖底层操作系统的支持。这个步骤如何进行取决于操作系统。生成的新服务器对客户的全部请求进行处理。处理结束后，终止这个新服务器。
			C3.返回C1步。

	1.9 端口号
	
		客户端通常对它所使用的端口号并不关心，只需保证该端口号在本机上是唯一的就可以了。客户端口号又称作临时端口号（即存在时间很短暂）。这是因为它通常只是在用户运行该客户程序时才存在，
		服务器则只要主机开着的，其服务就运行。		

	1.10 标准化进程

	1.11 RFC

		所有关于Internet的正式标准都以RFC（Request for Comment）文档出版。
		另外，大量的RFC并不是正式的标准，出版的目的只是为了提供信息。

	1.12 标准的简单服务	

	1.13 互联网

	1.14 实现

	1.15 应用编程接口

		API: socket、TLI

	1.16 测试网络
	
	1.17 小结                       			// done 2019-8-20 20:00:35	

第2章 链路层 

	2.1 引言 

		在TCP/IP协议族中，链路层主要有三个目的：

			（1）为IP模块发送和接收IP数据报；（2）为ARP模块发送ARP请求和接收ARP应答；（3）为RARP发送RARP请求和接收RARP应答。

	2.2 以太网和IEEE 802封装 

			以太网这个术语一般是指数字设备公司（Digital Equipment Corp.）、英特尔公司（Intel Corp.）和Xerox公司在1982年联合公布的一个标准。它是当今TCP/IP
		采用的主要的局域网技术。它采用一种称作CSMA/CD的媒体接入方法，其意思是带冲突检测的载波侦听多路接入（Carrier Sense, Multiple Access with Collision Detection）。它的速率为10 Mb/s，地址为48 bit。

			几年后，IEEE（电子电气工程师协会）802委员会公布了一个稍有不同的标准集，其中802.3针对整个CSMA/CD网络，802.4针对令牌总线网络，802.5针对令牌环网络。
		这三者的共同特性由802.2标准来定义，那就是802网络共有的逻辑链路控制（LLC）。

	2.3 尾部封装 

		通过调整IP数据报中字段的次序来提高性能。在以太网数据帧中，开始的那部分是变长的字段（IP首部和TCP首部）。把它们移到尾部（在CRC之前），这样当把数据复制到内核时，就可以把数据帧中的数据部分映射到一个硬件页面，节省内存到内存的复制过程。

	2.4 SLIP：串行线路IP 

		全称是Serial Line IP。在串行线路上对IP数据报进行封装的简单形式。

		SLIP协议定义的帧格式：

			IP数据报以一个称作END（0xc0）的特殊字符结束。同时，为了防止数据报到来之前的线路噪声被当成数据报内容，大多数实现在数据报的开始处也传一个END字符（如果有线路噪声，那么END字符将结束这份错误的报文。这样当前的报文得以正确地传输，而前一个错误报文交给上层后，会发现其内容毫无意义而被丢弃）。

			如果IP报文中某个字符为END，那么就要连续传输两个字节0xdb和0xdc来取代它。0xdb这个特殊字符被称作SLIP的ESC字符，但是它的值与ASCII码的ESC字符（0x1b）不同。

			如果IP报文中某个字符为SLIP的ESC字符，那么就要连续传输两个字节0xdb和0xdd来取代它。

		缺陷：

			每一端必须知道对方的IP地址。没有办法把本端的IP地址通知给另一端。

			数据帧中没有类型字段（类似于以太网中的类型字段）。如果一条串行线路用于SLIP，那么它不能同时使用其他协议。

			SLIP没有在数据帧中加上检验和（类似于以太网中的CRC字段）。如果SLIP传输的报文被线路噪声影响而发生错误，只能通过上层协议来发现（另一种方法是，新型的调制解调器可以检测并纠正错误报文）。这样，上层协议提供某种形式的CRC就显得很重要。在第3章和第17章中，我们将看到IP首部和TCP首部及其数据始终都有检验和。在第11章中，将看到UDP首部及其数据的检验和却是可选的。	

	2.5 压缩的SLIP 

	2.6 PPP：点对点协议 

		PPP包括以下三个部分：
			
			在串行链路上封装IP数据报的方法。PPP既支持数据为8位和无奇偶检验的异步模式（如大多数计算机上都普遍存在的串行接口），还支持面向比特的同步链接。

			建立、配置及测试数据链路的链路控制协议（LCP：Link Control Protocol）。它允许通信双方进行协商，以确定不同的选项。

			针对不同网络层协议的网络控制协议（NCP：Network Control Protocol）体系。当前RFC定义的网络层有IP、OSI网络层、DECnet以及AppleTalk。例如，IP NCP允许双方商定是否对报文首部进行压缩，类似于CSLIP（缩写词NCP也可用在TCP的前面）。

		PPP比SLIP具有下面这些优点：

			(1)PPP支持在单根串行线路上运行多种协议，不只是IP协议；
			(2)每一帧都有循环冗余检验；
			(3)通信双方可以进行IP地址的动态协商(使用IP网络控制协议)；
			(4)与CSLIP类似，对TCP和IP报文首部进行压缩；
			(5)链路控制协议可以对多个数据链路选项进行设置。	

	2.7 环回接口 

		大多数的产品都支持环回接口（Loopback Interface），以允许运行在同一台主机上的客户程序和服务器程序通过TCP/IP进行通信。

		A类网络号127就是为环回接口预留的。根据惯例，大多数系统把IP地址127.0.0.1分配给这个接口，并命名为localhost。一个传给环回接口的IP数据报不能在任何网络上出现。

		关键点：
			传给环回地址（一般是127.0.0.1）的任何数据均作为IP输入。
			传给广播地址或多播地址的数据报复制一份传给环回接口，然后送到以太网上。这是因为广播传送和多播传送的定义（第12章）包含主机本身。
			任何传给该主机IP地址的数据均送到环回接口。

	2.8 最大传输单元MTU 

	2.9 路径MTU 

		两台通信主机路径中的最小MTU，称之为：路径MTU

	2.10 串行线路吞吐量计算 

	2.11 小结 											// 2019-8-20 23:54:03

第3章 IP：网际协议 

	3.1 引言 

		不可靠（unreliable）的意思是它不能保证IP数据报能成功地到达目的地。IP仅提供最好的传输服务。如果发生某种错误时，如某个路由器暂时用完了缓冲区，IP有一个简单的错误处理算法：丢弃该数据报，然后发送ICMP消息报给信源端。任何要求的可靠性必须由上层来提供（如TCP）。

		无连接（connectionless）这个术语的意思是IP并不维护任何关于后续数据报的状态信息。每个数据报的处理是相互独立的。这也说明，IP数据报可以不按发送顺序接收。如果一信源向相同的信宿发送两个连续的数据报（先是A，然后是B），每个数据报都是独立地进行路由选择，可能选择不同的路线，因此B可能在A到达之前先到达。

	3.2 IP首部 

	3.3 IP路由选择 

		如果目的主机与源主机直接相连（如点对点链路）或都在一个共享网络上（以太网或令牌环网），那么IP数据报就直接送到目的主机上。否则，主机把数据报发往一默认的路由器上，由路由器来转发该数据报。

		IP层在内存中有一个路由表。当收到一份数据报并进行发送时，它都要对该表搜索一次。当数据报来自某个网络接口时，IP首先检查目的IP地址是否为本机的IP地址之一或者IP广播地址。如果确实是这样，数据报就被送到由IP首部协议字段所指定的协议模块进行处理。如果数据报的目的不是这些地址，那么（1）如果IP层被设置为路由器的功能，那么就对数据报进行转发（也就是说，像下面对待发出的数据报一样处理）；否则（2）数据报被丢弃。

		IP路由选择主要完成以下这些功能：

			搜索路由表，寻找能与目的IP地址完全匹配的表目（网络号和主机号都要匹配）。如果找到，则把报文发送给该表目指定的下一站路由器或直接连接的网络接口（取决于标志字段的值）。

			搜索路由表，寻找能与目的网络号相匹配的表目。如果找到，则把报文发送给该表目指定的下一站路由器或直接连接的网络接口（取决于标志字段的值）。目的网络上的所有主机都可以通过这个表目来处置。例如，一个以太网上的所有主机都是通过这种表目进行寻径的。这种搜索网络的匹配方法必须考虑可能的子网掩码。关于这一点我们在下一节中进行讨论。

			搜索路由表，寻找标为“默认（default）”的表目。如果找到，则把报文发送给该表目指定的下一站路由器。如果上面这些步骤都没有成功，那么该数据报就不能被传送。

	3.4 子网寻址 

		现在所有的主机都要求支持子网编址。不是把IP地址看成由单纯的一个网络号和一个主机号组成，而是把主机号再分成一个子网号和一个主机号。

	3.5 子网掩码 

		任何主机在引导时进行的部分配置是指定主机IP地址。大多数系统把IP地址存在一个磁盘文件里供引导时读用。
		除了IP地址以外，主机还需要知道有多少比特用于子网号及多少比特用于主机号。这是在引导过程中通过子网掩码来确定的。

		给定IP地址和子网掩码以后，主机就可以确定IP数据报的目的是：(1)本子网上的主机；(2)本网络中其他子网中的主机；(3)其他网络上的主机。
		如果知道本机的IP地址，那么就知道它是否为A类、B类或C类地址(从IP地址的高位可以得知)，也就知道网络号和子网号之间的分界线。而根据子网掩码就可知道子网号与主机号之间的分界线。

	3.6 特殊情况的IP地址 

		特殊的源地址、特殊的环回地址、广播地址。

	3.7 一个子网的例子 
	3.8 ifconfig命令 
	3.9 netstat命令 
	3.10 IP的未来 
	3.11 小结 											// 2019-8-21 00:48:49

第4章 ARP：地址解析协议 

	4.1 引言 

		数据链路如以太网或令牌环网都有自己的寻址机制（常常为48 bit地址），这是使用数据链路的任何网络层都必须遵从的。
		当一台主机把以太网数据帧发送到位于同一局域网上的另一台主机时，是根据48 bit的以太网地址来确定目的接口的。设备驱动程序从不检查IP数据报中的目的IP地址。

	4.2 一个例子 

		ftp hostname

	4.3 ARP高速缓存 

		ARP高效运行的关键是由于每个主机上都有一个ARP高速缓存。这个高速缓存存放了最近Internet地址到硬件地址之间的映射记录。

	4.4 ARP的分组格式 

		对于一个ARP请求来说，除目的端硬件地址外的所有其他的字段都有填充值。当系统收到一份目的端为本机的ARP请求报文后，它就把硬件地址填进去，然后用两个目的端地址分别替换两个发送端地址，并把操作字段置为2，最后把它发送回去。

	4.5 ARP举例 

		tcpdump

		4.5.1 一般的例子 

			arp -a
			telnet host port

		4.5.2 对不存在主机的ARP请求 
		4.5.3 ARP高速缓存超时设置 
	4.6 ARP代理 

		如果ARP请求是从一个网络的主机发往另一个网络上的主机，那么连接这两个网络的路由器就可以回答该请求，这个过程称作委托ARP或ARP代理(Proxy ARP)。这样可以欺骗发起ARP请求的发送端，使它误以为路由器就是目的主机，而事实上目的主机是在路由器的“另一边”。路由器的功能相当于目的主机的代理，把分组从其他主机转发给它。

	4.7 免费ARP 
	4.8 arp命令 
	4.9 小结 											// 2019-8-21 22:44:48

第5章 RARP：逆地址解析协议 

	5.1 引言 

		网络上的每个系统都具有唯一的硬件地址，它是由网络接口生产厂家配置的。无盘系统的RARP实现过程是从接口卡上读取唯一的硬件地址，然后发送一份RARP请求（一帧在网络上广播的数据），请求某个主机响应该无盘系统的IP地址（在RARP应答中）。

	5.2 RARP的分组格式 
	5.3 RARP举例 
	5.4 RARP服务器的设计 
		5.4.1 作为用户进程的RARP服务器 
		5.4.2 每个网络有多个RARP服务器 
	5.5 小结 											// 2019-8-21 23:28:42

第6章 ICMP：Internet控制报文协议 

	6.1 引言 

		ICMP经常被认为是IP层的一个组成部分。它传递差错报文以及其他需要注意的信息。ICMP报文通常被IP层或更高层协议（TCP或UDP）使用。一些ICMP报文把差错报文返回给用户进程。

	6.2 ICMP报文的类型 
	6.3 ICMP地址掩码请求与应答 
	6.4 ICMP时间戳请求与应答 
		6.4.1 举例 
		6.4.2 另一种方法 
	6.5 ICMP端口不可达差错 
	6.6 ICMP报文的4.4BSD处理 
	6.7 小结 											// 2019-8-21 23:52:34

第7章 Ping程序 

	7.1 引言 

		测试另一台主机是否可达。该程序发送一份ICMP回显请求报文给主机，并等待返回ICMP回显应答

	7.2 Ping程序 
		7.2.1 LAN输出 
		7.2.2 WAN输出 
		7.2.3 线路SLIP链接 
		7.2.4 拨号SLIP链路 
	7.3 IP记录路由选项 
		7.3.1 通常的例子 
		7.3.2 异常的输出 
	7.4 IP时间戳选项 
	7.5 小结 											// 2019-8-22 00:29:39

		ping程序是对两个TCP/IP系统连通性进行测试的基本工具。它只利用ICMP回显请求和回显应答报文，而不用经过传输层（TCP/UDP）。Ping服务器一般在内核中实现ICMP的功能。

第8章 Traceroute程序 
	8.1 引言 
	8.2 Traceroute 程序的操作 
	8.3 局域网输出 
	8.4 广域网输出 
	8.5 IP源站选路选项 
	8.5.1 宽松的源站选路的traceroute程序示例 
	8.5.2 严格的源站选路的traceroute程序示例 
	8.5.3 宽松的源站选路traceroute程序的往返路由 
	8.6 小结 

第9章 IP选路 
	9.1 引言 
	9.2 选路的原理 
	9.2.1 简单路由表 
	9.2.2 初始化路由表 
	9.2.3 较复杂的路由表 
	9.2.4 没有到达目的地的路由 
	9.3 ICMP主机与网络不可达差错 
	9.4 转发或不转发 
	9.5 ICMP重定向差错 
	9.5.1 一个例子 
	9.5.2 更多的细节 
	9.6 ICMP路由器发现报文 
	9.6.1 路由器操作 
	9.6.2 主机操作 
	9.6.3 实现 
	9.7 小结 

第10章 动态选路协议 
	10.1 引言 
	10.2 动态选路 
	10.3 Unix选路守护程序 
	10.4 RIP：选路信息协议 
	10.4.1 报文格式 
	10.4.2 正常运行 
	10.4.3 度量 
	10.4.4 问题 
	10.4.5 举例 
	10.4.6 另一个例子 
	10.5 RIP版本2 
	10.6 OSPF：开放最短路径优先 
	10.7 BGP：边界网关协议 
	10.8 CIDR：无类型域间选路 
	10.9 小结 

第11章 UDP：用户数据报协议 
	11.1 引言 
	11.2 UDP首部 
	11.3 UDP检验和 
	11.3.1 tcpdump输出 
	11.3.2 一些统计结果 
	11.4 一个简单的例子 
	11.5 IP分片 
	11.6 ICMP不可达差错（需要分片） 
	11.7 用Traceroute确定路径MTU 
	11.8 采用UDP的路径MTU发现 
	11.9 UDP和ARP之间的交互作用 
	11.10 最大UDP数据报长度 
	11.11 ICMP源站抑制差错 
	11.12 UDP服务器的设计 
	11.12.1 客户IP地址及端口号 
	11.12.2 目标IP地址 
	11.12.3 UDP输入队列 
	11.12.4 限制本地IP地址 
	11.12.5 限制远端IP地址 
	11.12.6 每个端口有多个接收者 
	11.13 小结 

第12章 广播和多播 
	12.1 引言 
	12.2 广播 
	12.2.1 受限的广播 
	12.2.2 指向网络的广播 
	12.2.3 指向子网的广播 
	12.2.4 指向所有子网的广播 
	12.3 广播的例子 
	12.4 多播 
	12.4.1 多播组地址 
	12.4.2 多播组地址到以太网地址的转换 
	12.4.3 FDDI和令牌环网络中的多播 
	12.5 小结 

第13章 IGMP：Internet组管理协议 
	13.1 引言 
	13.2 IGMP报文 
	13.3 IGMP协议 
	13.3.1 加入一个多播组 
	13.3.2 IGMP报告和查询 
	13.3.3 实现细节 
	13.3.4 生存时间字段 
	13.3.5 所有主机组 
	13.4 一个例子 
	13.5 小结 

第14章 DNS：域名系统 
	14.1 引言 
	14.2 DNS基础 
	14.3 DNS的报文格式 
	14.3.1 DNS查询报文中的问题部分 
	14.3.2 DNS响应报文中的资源记录部分 
	14.4 一个简单的例子 
	14.5 指针查询 
	14.5.1 举例 
	14.5.2 主机名检查 
	14.6 资源记录 
	14.7 高速缓存 
	14.8 用UDP还是用TCP 
	14.9 另一个例子 
	14.10 小结 

第15章 TFTP：简单文件传送协议 
	15.1 引言 
	15.2 协议 
	15.3 一个例子 
	15.4 安全性 
	15.5 小结 

第16章 BOOTP： 引导程序协议 
	16.1 引言 
	16.2 BOOTP的分组格式 
	16.3 一个例子 
	16.4 BOOTP服务器的设计 
	16.5 BOOTP穿越路由器 
	16.6 特定厂商信息 
	16.7 小结

第17章 TCP：传输控制协议 
	17.1 引言 
	17.2 TCP的服务 
	17.3 TCP的首部 
	17.4 小结 

第18章 TCP连接的建立与终止 
	18.1 引言 
	18.2 连接的建立与终止 
	18.2.1 tcpdump的输出 
	18.2.2 时间系列 
	18.2.3 建立连接协议 
	18.2.4 连接终止协议 
	18.2.5 正常的tcpdump输出 
	18.3 连接建立的超时 
	18.3.1 第一次超时时间 
	18.3.2 服务类型字段 
	18.4 最大报文段长度 
	18.5 TCP的半关闭 
	18.6 TCP的状态变迁图 
	18.6.1 2MSL等待状态 
	18.6.2 平静时间的概念 
	18.6.3 FIN_WAIT_2状态 
	18.7 复位报文段 
	18.7.1 到不存在的端口的连接请求 
	18.7.2 异常终止一个连接 
	18.7.3 检测半打开连接 
	18.8 同时打开 
	18.9 同时关闭 
	18.10 TCP选项 
	18.11 TCP服务器的设计 
	18.11.1 TCP服务器端口号 
	18.11.2 限定的本地IP地址 
	18.11.3 限定的远端IP地址 
	18.11.4 呼入连接请求队列 
	18.12 小结 

第19章 TCP的交互数据流 
	19.1 引言 
	19.2 交互式输入 
	19.3 经受时延的确认 
	19.4 Nagle算法 
	19.4.1 关闭Nagle算法 
	19.4.2 一个例子 
	19.5 窗口大小通告 
	19.6 小结 

第20章 TCP的成块数据流 
	20.1 引言 
	20.2 正常数据流 
	20.3 滑动窗口 
	20.4 窗口大小 
	20.5 PUSH标志 
	20.6 慢启动 
	20.7 成块数据的吞吐量 
	20.7.1 带宽时延乘积 
	20.7.2 拥塞 
	20.8 紧急方式 
	20.9 小结 

第21章 TCP的超时与重传 
	21.1 引言 
	21.2 超时与重传的简单例子 
	21.3 往返时间测量 
	21.4 往返时间RTT的例子 
	21.4.1 往返时间RTT的测量 
	21.4.2 RTT估计器的计算 
	21.4.3 慢启动 
	21.5 拥塞举例 
	21.6 拥塞避免算法 
	21.7 快速重传与快速恢复算法 
	21.8 拥塞举例（续） 
	21.9 按每条路由进行度量 
	21.10 ICMP的差错 
	21.11 重新分组 
	21.12 小结 

第22章 TCP的坚持定时器 
	22.1 引言 
	22.2 一个例子 
	22.3 糊涂窗口综合症 
	22.4 小结 

第23章 TCP的保活定时器 
	23.1 引言 
	23.2 描述 
	23.3 保活举例 
	23.3.1 另一端崩溃 
	23.3.2 另一端崩溃并重新启动 
	23.3.3 另一端不可达 
	23.4 小结 

第24章 TCP的未来和性能 
	24.1 引言 
	24.2 路径MTU发现 
	24.2.1 一个例子 
	24.2.2 大分组还是小分组 
	24.3 长肥管道 
	24.4 窗口扩大选项 
	24.5 时间戳选项 
	24.6 PAWS：防止回绕的序号 
	24.7 T/TCP：为事务用的TCP扩展 
	24.8 TCP的性能 
	24.9 小结 

第25章 SNMP：简单网络管理协议 
	25.1 引言 
	25.2 协议 
	25.3 管理信息结构 
	25.4 对象标识符 
	25.5 管理信息库介绍 
	25.6 实例标识 
	25.6.1 简单变量 
	25.6.2 表格 
	25.6.3 字典式排序 
	25.7 一些简单的例子 
	25.7.1 简单变量 
	25.7.2 get-next操作 
	25.7.3 表格的访问 
	25.8 管理信息库（续） 
	25.8.1 system组 
	25.8.2 interface组 
	25.8.3 at组 
	25.8.4 ip组 
	25.8.5 icmp组 
	25.8.6 tcp组 
	25.9 其他一些例子 
	25.9.1 接口MTU 
	25.9.2 路由表 
	25.10 trap 
	25.11 ASN.1和BER 
	25.12 SNMPv2 
	25.13 小结 

第26章 Telnet和Rlogin：远程登录 
	26.1 引言 
	26.2 Rlogin协议 
	26.2.1 应用进程的启动 
	26.2.2 流量控制 
	26.2.3 客户的中断键 
	26.2.4 窗口大小的改变 
	26.2.5 服务器到客户的命令 
	26.2.6 客户到服务器的命令 
	26.2.7 客户的转义符 
	26.3 Rlogin的例子 
	26.3.1 初始的客户-服务器协议 
	26.3.2 客户中断键 
	26.4 Telnet协议 
	26.4.1 NVT ASCII 
	26.4.2 Telnet命令 
	26.4.3 选项协商 
	26.4.4 子选项协商 
	26.4.5 半双工、一次一字符、一次一行或行方式 
	26.4.6 同步信号 
	26.4.7 客户的转义符 
	26.5 Telnet举例 
	26.5.1 单字符方式 
	26.5.2 行方式 
	26.5.3 一次一行方式（准行方式） 
	26.5.4 行方式：客户中断键 
	26.6 小结 

第27章 FTP：文件传送协议 
	27.1 引言 
	27.2 FTP协议 
	27.2.1 数据表示 
	27.2.2 FTP命令 
	27.2.3 FTP应答 
	27.2.4 连接管理 
	27.3 FTP的例子 
	27.3.1 连接管理：临时数据端口 
	27.3.2 连接管理：默认数据端口 
	27.3.3 文本文件传输：NVT ASCII表示还是图像表示 
	27.3.4 异常中止一个文件的传输：Telnet同步信号 
	27.3.5 匿名FTP 
	27.3.6 来自一个未知IP地址的匿名FTP 
	27.4 小结 

第28章 SMTP：简单邮件传送协议 
	28.1 引言 
	28.2 SMTP协议 
	28.2.1 简单例子 
	28.2.2 SMTP命令 
	28.2.3 信封、首部和正文 
	28.2.4 中继代理 
	28.2.5 NVT ASCII 
	28.2.6 重试间隔 
	28.3 SMTP的例子 
	28.3.1 MX记录：主机非直接连到Internet 
	28.3.2 MX记录：主机出故障 
	28.3.3 VRFY和EXPN命令 
	28.4 SMTP的未来 
	28.4.1 信封的变化：扩充的SMTP 
	28.4.2 首部变化：非ASCII字符 
	28.4.3 正文变化：通用Internet邮件扩充 
	28.5 小结 

第29章 网络文件系统 
	29.1 引言 
	29.2 Sun远程过程调用 
	29.3 XDR：外部数据表示 
	29.4 端口映射器 
	29.5 NFS协议 
	29.5.1 文件句柄 
	29.5.2 安装协议 
	29.5.3 NFS过程 
	29.5.4 UDP还是TCP 
	29.5.5 TCP上的NFS 
	29.6 NFS实例 
	29.6.1 简单的例子：读一个文件 
	29.6.2 简单的例子：创建一个目录 
	29.6.3 无状态 
	29.6.4 例子：服务器崩溃 
	29.6.5 等幂过程 
	29.7 第3版的NFS 
	29.8 小结 

第30章 其他的TCP/IP应用程序 
	30.1 引言 
	30.2 Finger协议 
	30.3 Whois协议 
	30.4 Archie、WAIS、Gopher、Veronica和WWW 
	30.4.1 Archie 
	30.4.2 WAIS 
	30.4.3 Gopher 
	30.4.4 Veronica 
	30.4.5 万维网WWW 
	30.5 X窗口系统 
	30.5.1 Xscope程序 
	30.5.2 LBX：低带宽X 
	30.6 小结 
附录A tcpdump程序 
附录B 计算机时钟 
附录C sock程序 
附录D 部分习题的解答 
附录E 配置选项 
附录F 可以免费获得的源代码 


	




关键词：

	ADSL (Asymmetrical Digtal Subscriber Loop): 非对称数字用户换线
	API (Application Program Interface): 应用程序接口
	ARP (Address Resolution Portocal): 地址解析协议
	BSD (Berkeley Software Distribution): 伯克利软件发行
	CD (Collision Detection): 碰撞侦测
	CRC (Cyclic Redundancy Check) 循环冗余码校验
	CSLIP (Compressed Serial Line Internet Protocol): 压缩串行线路网际协议 
	CSMA (Carrier Sense Multiple Access): 载波侦听多路访问
	DCE (Distributed Computing Environment): 分布式计算环境
	DNS (Domain Name System): 域名服务器
	DSAP (Destination Service Access Point) 目的服务访问点
	FDDI (Fiber Distributed Data Interface) 光纤分布式数据接口
	FTP (File Transfer Protocal): 文件传输协议
	IAB (Internet Architecture Board): 互联网架构委员会
	IANA (Internet Assigned Numbers Authority): 互联网地址编码分配机构
	ICMP (Internet Control Messages Protocal): 互联网控制报文协议
	IEEE (Institute of Electrical and Electronic Engineers): 电气与电子工程师协会
	IETF (Internet Engineering Task Force): 互联网工程任务组
	IGMP (Internet Group Messages Protocal): 互联网组管理协议
	IP (Internet Protocla): 互联网协议
	IRTF (Internet Research Task Force): 互联网研究专门工作组
	ISOC (Internet Society): 互联网协会
	LAN (Local Area Network): 局域网
	LCP (Link Control Protocol): 链路控制协议
	Loopback Interface: 环回接口
	MTU (Maximum Transmission Unit): 最大传输单元
	NCP (Network Control Protocol): 网络控制协议
	NFS (Network File System): 网络文件系统
	NTP (Network Time Protocol): 网路时间协定
	NNTP (Network News Transfer Protocol): 网络新闻传输协议
	OSF (Open Software Foundation): 开放软体基金会
	PPP (Point to Point Protocals): 点对点协议
	RARP (Reverse Address Resolution Portocal): 反向地址解析协议
	RFC (Request For Comment): 请求注解
	SLIP (Serial Line Internet Protocol): 串行线路接口协议
	SMTP (Simple Message Transfer Protocal): 简单邮件传输协议
	SNAP (Sub-network Access Protocol): 子网接入协议
	SNMP (Simple Network Management Protocal): 简单网络管理协议
	SSAP (Source Service Access Point): 源服务访问点
	TCP (Transmmission Control Protocol): 传输控制协议
	TFTP (Trivial File Transfer Portocal): 简单文件传输协议
	TLI (Transport Layer Interface): 传输层接口
	TTL (Time To Live): 存活时间
	UDP (User Datagram Protocol): 用户数据报协议
	WAN (Wide Area Network): 广域网
	Wireless lan: 无线局域网

