# 2019-10-14 23:02:04

	# 离职申请 2019-10-28

	# 看LOL S9小组赛

# 2019-10-15 22:54:57

	# happy birthday

	# LOL S9	

# 2019-10-18 21:01:54	

	# LOL S9

		A-1 GRF
		A-2 G2

# 2019-10-19 11:56:20

	# Springboot 启动流程

	# SpringMVC 请求流程  // TODO


# 2019-10-22 22:44:08

	# inteview 3 companys

	# lol 2 games

# 2019-10-23 21:01:46

	# https://docs.spring.io/spring/docs/5.2.0.RELEASE/spring-framework-reference/core.html#beans-factory-class-instance-factory-method

		1.4.1 Dependency Resolution Process 

		1.5	 // todo

# 2019-10-26 10:00:34
	
	# 面试： 13:30

		北京源码酷教育科技有限公司		北京朝阳区SOHO现代城C座1201

		不想去。

# 2019-10-27 22:41:37

	# 早上看了会git面试题

	  下午LOL

	  晚上LOL比赛
	  
# 2019-10-29 19:04:06

	# 面试

		1. 大连华信 北辰世纪中心A座11层

			没戏。

		2. 东风系能源 西北旺东路10号东区12号楼和协科技大厦B座一层

			等通知

# 2019-10-30 20:35:23			

	# 面试

		软通动力————联想总部

			需springcloud，pass。

# 2019-10-31 20:35:13

	# 面试	

		am. 国亚通宝

			小小小外包，pass。

		pm. 京东————某外部
		
			只招中高级，pass。	

	# https://docs.spring.io/spring/docs/5.2.0.RELEASE/spring-framework-reference/core.html#spring-core // todo

# 2019-11-1 23:15:49

	# 面试 

		am. 雅睿捷 昌平区 珠江摩尔公园6号楼 1单元207

				面试问题：
					** mybatis后台分页

				面试结果：
					小小小公司，没人负责一个项目，pass。

		pm. 蓝卡 中关村软件园信息中心 1A306	15：00

				面试问题：
					工作经历...技术相关很少
		
				面试结果：
					新增研发部，面试题多数和linux系统有关，等通知（最晚周一下班前）。		

			阿里影业							20:00

				面试问题：

					** 自我介绍
					** 离职原因（诟病：做好自己的工作）
					** 项目相关。自己负责的疑难问题及解决方案。
					** http协议和udp协议的区别
					** arraylist和linkedlist的区别
					** 浏览器url请求的过程
					** jdk1.8 stream操作
					** hashmap和concurrenthashmap的区别
					** 平时学习的方式
					** springboot中一些starter是怎么加载的

				面试结果：

					差距很大。继续努力。

# 2019-11-5 19:35:48

	# 博思软件 am 10:00

		出差

		晚上7:00 电话面试	 PASS

	# 长久物流 pm 15:00	

		够呛 PASS

# 2019-11-6 16:27:08

	# 10：00 四方精创

		一面，可能缴纳的是深圳的五险一金，薪资面额 = 基本工资(40%) + 绩效(60%)。 PASS

	# 14:00  京北方 ==》 安定门-安德里北街（8号线直达）民生银行
	
		Offer薪资意愿：15K * 12 + 季度绩效（0.1%-1%）+ 餐补（20/d） = 15K+，两个月试用期。

# 2019-11-7 22:12:05

	# 10:00 上品盈嘉 北京朝阳区 富力双子座B座 1702 品刷刷	

		一面： 平时用的一些东西。 感觉还好。 

		相关工作： 营销相关 + 支付 + 小程序。开发团队3人。业务较多，会经常加班到8/9点。  等下周通知。

	# 14:30 联想总部 @ 软通动力

		第一个项目面试：

			设计模式、mybatis标签...		// 反馈：已通过面试 15K

		第二个项目面试：

			SQL、单例模式、二分查找、HashMap和ConcurrentHashMap		// 反馈：已通过面试 15K

# 2019-11-8 20:49:28

	# 京北方 入职 海淀区西三环北路25号 青政大厦7/8层 

# 2019-11-10 23:46:46

	# 恭喜FPX S9冠军			

# 2019-11-11 14:50:00

	# https://docs.spring.io/spring/docs/5.2.0.RELEASE/spring-framework-reference/core.html#beans-definition-profiles
	
		1. The IoC Container	// done 2019年11月11日 17点25分

# 2019-11-12 21:53:00

	# 入职相关工作：		

		OA办公系统: http://oa.northking.net
			登录名: binwei.han
		邮件系统: http://mail.northking.net 		
			邮箱地址: binwei.han@northking.net
		日志系统: http://bpowls.northking.net:7070/pm/
			登录名: binwei.han

		项目编号： RD-18-1386-03

		相关文档：
			C:\Users\hbw44\Downloads\考勤管理制度.docx
			C:\Users\hbw44\Downloads\员工手册201803版本.doc
			C:\Users\hbw44\Downloads\办公用品管理规定.docx

# 2019-11-13 10:14

	# 民生银行入场 

		1. 姓名:  韩斌伟
		2. 联系电话: 137 5233 0376
		3. 所在项目组名称: 中国民生银行信息科技部外部开发资源池公共资源框架采购项目
		4. 所在工作楼层: 6层(工位暂时未定)
		5. 行方项目经理: 王飞
		6. 行方经理联系方式: ‭186 0012 9523‬
		7. 所属地区: 安外
		8. 公司项目经理: 王飞
		9. 公司经理练习方式: 156 1410 8346

	# https://docs.spring.io/spring/docs/5.2.0.RELEASE/spring-framework-reference/core.html#core-convert

	  https://docs.spring.io/spring/docs/5.2.0.RELEASE/spring-framework-reference/core.html#validation // done 2019年11月13日 18点50分

# 2019-11-14 09:52:00 
	
	# 相关工作内容核实：

		公司这边：

			每天上下班手机APP打卡签到签退；
			每周四上报周报，行内邮箱发给小组长；
			每周五上报日志；
			每月20号左右提交项目外出申请（ito）流程，

			差不多就这些，我都会在群里提醒，关注一下就知道了

			OA系统：http://oa.northking.net
			邮箱：binwei.han@northking.net  邮箱服务器：mail.northking.net

		行方这边：

			每天上下班打卡，
			每月月初报预估报工，
			每月报工，

			主要这些，慢慢熟悉就行，有什么不懂的可以问一下小组长，小组长问一下王飞经理，看看王飞经理给你指派的是哪位小组长

	# https://docs.spring.io/spring/docs/5.2.0.RELEASE/spring-framework-reference/core.html#expressions // done 2019年11月14日 18点51分

# 2019-11-15 09:28:00
	
	# https://docs.spring.io/spring/docs/5.2.0.RELEASE/spring-framework-reference/core.html#aop

		5.4 @Aspect support // done 2019年11月15日 18点47分

# 2019-11-18 09:36:00

	# https://docs.spring.io/spring/docs/5.2.0.RELEASE/spring-framework-reference/core.html#aop-schema

		5 Aspect Oriented Programming with Spring // done 2019-11-18 17:10:00	

# 2019-11-25 23:16:15

	# https://github.com/hibernate/hibernate-demos		

		Hibernate ORM		// done 2019-11-25 23:16:55

		Hibernate OGM		// done just so so 2019-11-25 23:17:37

		Hibernate Search

		Hibernate Validator // done before 

		Java 9				// just soso 2019-11-25 23:17:57

		Other	

# 2019-11-30 22:26:57

	# spring + struts2 + mybatis整合

		+ struts2	// done 2019-11-30 22:27:21			

		+ mybatis 	// done 2019-12-1 19:37:17

		+ 前后端调用	// todo


# 2019-12-2 22:35:42

	# 看了一些私活平台，还是努力提高自身吧		// 2019-12-2 22:36:01

# 2019-12-5 22:50:19

	# lol	

# 2019-12-8 17:30 

	# build ssm project 						// done 

# 2019-12-9 18:50

	# activiti 									// todo

# 2019-12-10 21:47:24

	# 公司培训									// 周六TODO   done 2019-12-14 16:00

	# 电脑修理店拷贝硬盘资源						// 周末TODO   done 2019-12-15 20:00 

		硬盘已格式化，无内容

	# java优秀项目：								// TODO

		开源界“小普元”超越传统商业企业级开发平台: https://github.com/zhangdaiscott/jeecg-boot

		电商系统，包括前台商城系统及后台管理系统: https://github.com/macrozheng/mall

# 2019-12-11 22:28:01

	# boss系统重新搭建						

		计划：

			java:

				ac:						// 终端指令相关							// done 2019-12-12 22:31:08									

				activiti:				// activiti工作流							

				billing:				

				callcenter:				// doing

				crm:

				ocs:

				portal:

				res:

				rest:

				sms:

				task:

				util:

				web:

				weixin:

				ws:

			jsp:						// doing

2019-12-17 14:12:00

	# ObjectMapper()等json工具类转化总结 		// done 2019-12-17 22:59:38

		具体用法参考：

	# github 资源浏览						// todo 	

2019-12-19 18:51:00
	
	# hibernate Validator 				// todo done 2019-12-21 16:11:41

		条件必输校验；是否可以自定义校验注解	// done 2019-12-19 22:47:28

			official： 

				5.1.3.Final	https://docs.jboss.org/hibernate/validator/5.1/reference/en-US/html_single/#validator-gettingstarted-uel	// todo

		方案： com.binvi.springboot.demo03.validator.referenceguide.chapter03.validation.ConditionalRequiredTest
		
			可以添加，@ScriptAssert可用于List添加多条.i.e:

				@ScriptAssert.List({
						@ScriptAssert(lang = "javascript", script = "_this.type != 00 || !!_this.flag", message = "type为00时，flag不能为空"),
						@ScriptAssert(lang = "javascript", script = "_this.type != 00 || !!_this.flag2", message = "type为00时，flag2不能为空"),
						@ScriptAssert(lang = "javascript", script = "_this.type != 00 || !!_this.flag3", message = "type为00时，flag3不能为空"),
						@ScriptAssert(lang = "javascript", script = "_this.type != 00 || !!_this.flag4", message = "type为00时，flag4不能为空")
				})
				@Data
				public class DemoRequest {

					private String id;
					private String name;
					@Pattern(regexp = "00|01|02|03|04|05")
					private String type;
					private String flag;
					private String flag2;
					private String flag3;
					@Pattern(regexp = "11|12|13|14|15", message = "flag4必须在[{regexp}]之间取值")
					private String flag4;

				}

		方案2： 自定义校验器。（但是每个request都需要定义自己的校验器）

			i.e:

				@Documented
				@Constraint(validatedBy = ConditionalRequired.Validator.class)
				@Target({TYPE})
				@Retention(RUNTIME)
				@Repeatable(List.class)
				public @interface ConditionalRequired {

					String message() default "{com.binvi.springboot.demo03.validator.referenceguide.chapter03.annotation.ConditionalRequired.message}";

					Class<?>[] groups() default { };

					Class<? extends Payload>[] payload() default { };

					class Validator implements ConstraintValidator<ConditionalRequired, DemoRequest> {

						@Override
						public void initialize(ConditionalRequired constraintAnnotation) {

						}

						@Override
						public boolean isValid(DemoRequest request, ConstraintValidatorContext context) {
							if (request == null) {
								return true;
							}
							if (StringUtils.isEmpty(request.getType())) {
								return true;
							}
							return (!StringUtils.equals("01", request.getType()) || StringUtils.isNotEmpty(request.getFlag())) &&
									(!StringUtils.equals("01", request.getType()) || StringUtils.isNotEmpty(request.getFlag2())) &&
									(!StringUtils.equals("01", request.getType()) || StringUtils.isNotEmpty(request.getFlag3())) &&
									(!StringUtils.equals("01", request.getType()) || StringUtils.isNotEmpty(request.getFlag4()));
						}
					}

					@Target(TYPE)
					@Retention(RUNTIME)
					@Documented
					@interface List {
						ConditionalRequired[] value();
					}

				}

			tips： 
				
				If a ValidatorFactory instance is no longer in use, it should be disposed by calling ValidatorFactory#close(). This will free any resources possibly allocated by the factory.	

2019-12-20 21:03:37

	# LOL				 

2019-12-21 12:39:14

	# java 执行其他语言的脚本，如Javascript

		```java

			ScriptEngineManager scriptEngineManager = new ScriptEngineManager();
			ScriptEngine js = scriptEngineManager.getEngineByName("js");
			js.put("out", System.out);
			String script_js = "for (var i = 0; i < 10; i++) { out.println(i) }";
			System.out.println(js.eval(script_js));
			
		```		






			 	  



