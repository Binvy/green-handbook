mybatis-spring

	maven:

		<dependency>
		  <groupId>org.mybatis</groupId>
		  <artifactId>mybatis-spring</artifactId>
		  <version>2.0.5</version>
		</dependency>

	setup:
	
		xml:

			<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			  <property name="dataSource" ref="dataSource" />
			</bean>

			<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
			  <property name="mapperInterface" value="org.mybatis.spring.sample.mapper.UserMapper" />
			  <property name="sqlSessionFactory" ref="sqlSessionFactory" />
			</bean>

		java:	

			@Bean
			public SqlSessionFactory sqlSessionFactory() throws Exception {
			  SqlSessionFactoryBean factoryBean = new SqlSessionFactoryBean();
			  factoryBean.setDataSource(dataSource());
			  return factoryBean.getObject();
			}

			@Bean
			public UserMapper userMapper() throws Exception {
			  SqlSessionTemplate sqlSessionTemplate = new SqlSessionTemplate(sqlSessionFactory());
			  return sqlSessionTemplate.getMapper(UserMapper.class);
			}

			public interface UserMapper {
			  @Select("SELECT * FROM users WHERE id = #{userId}")
			  User getUser(@Param("userId") String userId);
			} 

			public class FooServiceImpl implements FooService {

			  private final UserMapper userMapper;

			  public FooServiceImpl(UserMapper userMapper) {
			    this.userMapper = userMapper;
			  }

			  public User doSomeBusinessStuff(String userId) {
			    return this.userMapper.getUser(userId);
			  }
			}	